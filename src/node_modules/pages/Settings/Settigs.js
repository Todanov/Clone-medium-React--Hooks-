import React, { useContext, useState, useEffect } from 'react'
import { Redirect } from 'react-router-dom'

import s from './Settings.module.css'
import BackendErrorMessages from 'pages/autenfication/component/BackendErrorMessages'
import useFetch from 'hooks/useFetch'
import {CurrentUserContext} from 'contexts/currentUser'
import useLocalStoreg from 'hooks/useLocalStorage'


const Settings = () => {

    const[currentUserState , dispatch]=useContext(CurrentUserContext)
    const apiUrl = '/user'
    const [{response,error}, doFetch]=useFetch(apiUrl)
    const [image , setImage] = useState('')
    const [username , setUsername] = useState('')
    const [bio , setBio] = useState('')
    const [email , setEmail] = useState('')
    const [password , setPassword] = useState('')
    const [, setToken]= useLocalStoreg('token')
    const [isSuccsessfullLogouut, setisSuccsessfullLogouut]=useState(false)

    const handleSubmit = event =>{
        event.preventDefault()
        doFetch({
            method: 'put',
            data:{
                user:{
                    ...currentUserState.currentUser,
                    image,
                    username,
                    bio,
                    email,
                    password
                }
            }
        })
    }
    const logout = event => {
            event.preventDefault()
            setToken('')
            dispatch({type: "LOGOUT" })
            setisSuccsessfullLogouut(true)

    }
    useEffect(()=>{
        if(!currentUserState.currentUser){
            return
        }
        setImage(currentUserState.currentUser.image)
        setUsername(currentUserState.currentUser.username)
        setBio(currentUserState.currentUser.bio)
        setEmail(currentUserState.currentUser.email)
         },[currentUserState.currentUser])

         useEffect(()=>{
             if(!response){
                 return
             }
             dispatch({type: 'SET_AUTHORIZED', payload: response.user})
         }, [response,dispatch])
         if(isSuccsessfullLogouut){
             return <Redirect to='/'/>
         }

    return(
        <div className={s.container}>
            <h1 className={s.h1}>Your Settings</h1>
            {error && <BackendErrorMessages backendErrors={error.errors}/>}
            <form onSubmit={handleSubmit} className={s.form}  >
                <div className={s.inputs1}><input
                 className={s.input}
                 type='text'
                 placeholder='URL of profile picture'
                 value={image}
                 onChange={e => setImage(e.target.value)}

                /></div> 
                <div className={s.inputs2}><input
                 className={s.input} 
                 type='text'
                 placeholder='Username'
                 value={username}
                 onChange={e=>setUsername(e.target.value)}
                 /></div>   
                <div className={s.textarea1}><textarea 
                className={s.textarea} 
                type='text'
                placeholder='Short Bio'
                value={bio}
                onChange={e => setBio(e.target.value)}
                ></textarea></div> 
                <div className={s.inputs3}><input
                className={s.input} 
                typy='Email'
                placeholder='email'
                value={email}
                onChange={e=>setEmail(e.target.email)}
                /></div> 
                <div className={s.inputs4}><input 
                className={s.input}
                type="password"
                placeholder='Password'
                type={password}
                onChange={e => setPassword(e.target.value)}
                /></div> 
                 <div className={s.btns}><button
                 className={s.btn}
                 type='submit'
                
                >
                  Update setting   
                </button></div>

            </form>
            <hr className={s.hr}/>
            <div>
                <button  className={s.btnR} onClick={logout}>Log Out</button>
            </div>
        </div>
    )
}

export default Settings