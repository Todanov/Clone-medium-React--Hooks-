import React, { useEffect, useContext, useState } from 'react'
import s from './article.module.css'
import useFetch from 'hooks/useFetch'
import { Link, Redirect } from 'react-router-dom'
import TagList from 'components/taglist/taglist'
import Loading from 'components/Loading/Loading'
import ErrorMessage from 'components/Error/ErrorMessage'
import {CurrentUserContext} from 'contexts/currentUser'

const Article = props => {
 
    const slug =  props.match.params.slug
    console.log(slug)
    const apiUrl = `/articles/${slug}`
    const [{response, error, isLoading}, doFetch] = useFetch(apiUrl)
    const [{response: deleteArticleResponse}, doDeleteArticle] = useFetch(apiUrl)
    const [currentUserState]=useContext(CurrentUserContext)
    const [isSuccessfullDelete, setIsSuccessfullDelete] = useState(false)

    const isAuthor = () => {
        if (!response || !currentUserState.isLoggedIn ){
            return false
        }
        return (
            response.article.author.username === currentUserState.currentUser.username
        )
    }
    const deleteArticle = ()=> {
            doDeleteArticle ({
                method: 'delete'
            })
    }

    useEffect(()=>{
        doFetch()
    },[doFetch])

    useEffect(()=>{
        if(!deleteArticleResponse){
            return
        }
        setIsSuccessfullDelete(true)

    }, [deleteArticleResponse])
    if (isSuccessfullDelete){
        return <Redirect to='/'/>
    }

    return ( 
        <div className={s.container}>
            {!isLoading && response &&(
            <div className={s.title}>
                <h1 className={s.h1}>{response.article.title}</h1>
                <div className={s.name}>
                    
                
                <div className={s.links}>
                    <Link className={s.link} to={`/profiles/${response.article.author.username}`}>
                        <img className={s.img} src={response.article.author.image} alt=''/>
                    </Link>
               
                <div className={s.name_1}>
                    <Link className={s.link} to={`/profiles/${response.article.author.username}`}>
                       {response.article.author.username}
                    </Link>
                         <span className={s.dataS}>{response.article.createdAt}</span>  </div>
                </div>
                {isAuthor() && (
                    <div clasName={s.btn_action}>
                        <Link className={s.link_home} to={`/articles/${response.article.slug}/edit`}>Edit Article</Link>
                        <button onClick={deleteArticle} className={s.btn_delete}>Delete Article</button>
                    </div>
                )}
                </div>
            </div>)}
            <div className={s.info}>
                {isLoading && <Loading/>}
                {error && <ErrorMessage/>}
                {!isLoading && response && (
                    <div>
                        <p className={s.p1}>{response.article.body}</p>
                       <div className={s.tags}> <TagList tags={response.article.tagList} />  </div> 
                     </div>
                
                )}
            </div>

        </div>
    )
}


export default Article 