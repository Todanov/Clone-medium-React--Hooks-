import React, { useState ,useEffect, useContext} from 'react'
import s from './autenfication.module.css'
import { Link, Redirect } from 'react-router-dom'

import useFetch from 'hooks/useFetch'
import useLocalStorage from 'hooks/useLocalStorage'
import {CurrentUserContext} from 'contexts/currentUser'
import BackendErrorMessages from 'pages/autenfication/component/BackendErrorMessages'

const Autenfication = (props) => {
    const isLogin = props.match.path === '/login'
    const pageTitele = isLogin ? 'Sing In' : 'Sing Up'
    const descriptionLink = isLogin ? '/register' : '/login'
    const descriptionText = isLogin ? 'Need an account?' : 'Have an account?' 
    const apiUrl = isLogin ? '/users/login' : '/users'
    const [email,setEmail]=useState('')
    const [username,setUsername] = useState('')
    const [isSuccessfullSubmit , setisSuccessfullSubmit] = useState(false)
    const [password,setPassword]=useState('')
   const [{response,isLoading , error}, doFetch] = useFetch(apiUrl)
   const [,setToken] = useLocalStorage('token')
    const [ , setCurrentUserState] = useContext(CurrentUserContext)
         


    const handelSubmit = (event)=>{
       event.preventDefault()
        console.log('data', email,password) 
        const user = isLogin ? {email,password} : {email,password,username}
       doFetch({
           method:'post',
           data:{
               user
           }
       })
    }

    useEffect(()=>{
        if(!response){
            return
        }
        setToken(response.user.token)
        setisSuccessfullSubmit(true)
        setCurrentUserState(state => ({
            ...state,
            isLoggedIn: true,
            isLoading: false,
            currentUser:response.user
        }))
    }, [response,setToken ,setCurrentUserState])
        if (isSuccessfullSubmit){
            return <Redirect to='/' />
        }

    return(
        <div className={s.container}>
           <div className={s.information}>
            <div className={s.login}><h1 className={s.log}>Login</h1> 
    <div className={s.link}><Link to={descriptionLink}>{descriptionText}</Link></div>
              
            <div className={s.tables}>
                <form className={s.form} onSubmit={handelSubmit} >
                    {error && <BackendErrorMessages backendErrors={error.errors} />}
                    {!isLogin && (
                     <div>
                     <input
                             type='text'
                             placeholder='Username'
                             className={s.email}
                             value={username}
                             onChange={e=>setUsername(e.target.value)}
                             /> 
                     </div>  
                    )}
                    <div>
                <input
                type='email'
                placeholder='Email'
                className={s.email}
                value={email}
                onChange={e=>setEmail(e.target.value)}
                /> 
                  </div> 
                <div>
                    <input
                     type='password'
                    placeholder='Password'
                    className={s.password}
                    value={password}
                    onChange={(e)=> setPassword(e.target.value)}
                    />   </div>
                <div className={s.bts}> <button className={s.btn} disabled={isLoading}> {pageTitele}</button> </div>
                </form>    
            </div>
          
           </div>
           </div>
         </div>
        
    )
}

export default Autenfication