import React, { useEffect,Fragment } from 'react'
import { stringify } from 'query-string'

import useFetch from 'hooks/useFetch'
import {limit,getPagination} from 'utilits/utilits'
import Loading from 'components/Loading/Loading'
import ErrorMessage from 'components/Error/ErrorMessage'
import Feed from 'components/Feed/Feed'
import Paginations from 'components/pagination/pagination'

const getApiUrl = ({username, offset,isFavorites})=>{
    const params=isFavorites
    ? {limit, offset, favorited:username}
    : {limit, offset, author:username}
    return `/articles?${stringify(params)}`
}

const UserArticles = ({username, location, isFavorites, url})=>{
    const {offset,currentPage} = getPagination(location.search)
    const apiUrl = getApiUrl({username, offset, isFavorites})
    const [{response,isLoading,error}, doFetch] = useFetch(apiUrl)
    console.log('response',response , username,location,isFavorites,url)
    useEffect(()=>{
        doFetch()
    },[doFetch,isFavorites])
    return(
        <div>
        {isLoading && <Loading/>}
        {error && <ErrorMessage/>}
        {!isLoading && response &&(
            <Fragment>
                <Feed articles={response.articles} />
                <Paginations
                total={response.articlesCount}
                limit={limit}
                url={url}
                currentPage={currentPage}
                />
            </Fragment>
        )}
        </div>
    )
}
export default UserArticles